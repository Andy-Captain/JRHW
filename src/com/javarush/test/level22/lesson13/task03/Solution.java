package com.javarush.test.level22.lesson13.task03;

/* Проверка номера телефона
Метод checkTelNumber должен проверять, является ли аргумент telNumber валидным номером телефона.
Критерии валидности:
1) если номер начинается с '+', то он содержит 12 цифр
2) если номер начинается с цифры или открывающей скобки, то он содержит 10 цифр
3) может содержать 0-2 знаков '-', которые не могут идти подряд
4) может содержать 1 пару скобок '(' и ')'  , причем если она есть, то она расположена левее знаков '-'
5) скобки внутри содержат четко 3 цифры
6) номер не содержит букв
7) номер заканчивается на цифру

Примеры:
+380501234567 - true      // (^\+\d{12})
+38(050)1234567 - true    // (^\+\d{2}\(\d{3}\)\d{7})
+38050123-45-67 - true    // (^\+\d{8}-\d{2}-\d{2})
050123-4567 - true        // (\d{6}-\d{4})

+38)050(1234567 - false
+38(050)1-23-45-6-7 - false
050ххх4567 - false
050123456 - false
(0)501234567 - false
*/
public class Solution {

    public static boolean checkTelNumber(String telNumber) {
        return ((telNumber.matches("^\\+[\\(\\-]?(\\d[\\(\\)\\-]?){11}\\d$") || telNumber.matches("^\\(?(\\d[\\-\\(\\)]?){9}\\d$"))
                        && telNumber.matches("[\\+]?\\d*(\\(\\d{3}\\))?\\d*\\-?\\d*\\-?\\d*\\d$"));
        // мой, который учитывает только 4 верхних варианта
        //return telNumber.matches("(^\\+\\d{12})|(^\\+\\d{2}\\(\\d{3}\\)\\d{7})|(^\\+\\d{8}-\\d{2}-\\d{2})|(\\d{6}-\\d{4})");
    }
}
